generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                 String      @id @default(auto()) @map("_id") @db.ObjectId
  username           String      @unique
  fullName           String
  email              String      @unique
  emailVerified      Boolean     @default(false)
  password           String
  active             Boolean     @default(true)
  twoFA              Boolean     @default(false)
  initAvatarColor    String
  avatarUrl          String      @default("")
  isAdmin            Boolean     @default(false)
  deleted            Boolean     @default(false)
  createdDate        DateTime    @default(now())
  updatedDate        DateTime?
  transactionsAmount Int
  orgMember          OrgMember[]
}

model OrgMember {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  isOwner        Boolean
  user           User          @relation(fields: [userId], references: [id])
  userId         String        @db.ObjectId
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?       @db.ObjectId
}

model Organization {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  members     OrgMember[]
  active      Boolean     @default(true)
  products    Product[]
  createdDate DateTime    @default(now())
  updatedDate DateTime?
}

model Product {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  image          String
  price          Float
  detail         String
  active         Boolean       @default(true)
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?       @db.ObjectId
  createdDate    DateTime      @default(now())
  updatedDate    DateTime?
}

model Pricing {
  id                String    @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  amount            String
  active            Boolean   @default(false)
  transactionAmount Int
  createdDate       DateTime  @default(now())
  updatedDate       DateTime?
}

model BankTransaction {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  code         String
  amount       String
  recieved     Boolean   @default(false)
  createdDate  DateTime  @default(now())
  recievedDate DateTime?
}

model BankInformation {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  accountNo   String
  accountName String
  acqId       String
  createdDate DateTime  @default(now())
  updatedDate DateTime?
}
